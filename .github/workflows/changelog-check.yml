name: CHANGELOG check

on:
  pull_request:
    branches: [ master, master-* ]
    types: [ opened, synchronize, reopened, ready_for_review, labeled, unlabeled ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  releasenote-check:
    if: ${{ ! github.event.pull_request.draft }}
    runs-on: ubuntu-latest

    env:
      DOCUMENTATION: ${{ contains(github.event.pull_request.labels.*.name, 'documentation') }}
      NO_CHANGELOG: ${{ contains(github.event.pull_request.labels.*.name, 'NO-CHANGELOG') }}
      SNAPSHOT_ONLY: ${{ contains(github.event.pull_request.labels.*.name, 'SNAPSHOT-ONLY') }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Fetch pull_request info
        env:
          GH_REPO: ${{ github.repositoryUrl }}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          PR_NUM: ${{ github.event.number }}
        run: |
          gh pr view $PR_NUM --json=files | jq --raw-output '.files[].path' > files.txt
      - name: Changelog check for CHANGELOG.md
        if: always() && !(fromJson(env.DOCUMENTATION) || fromJson(env.NO_CHANGELOG) || fromJson(env.SNAPSHOT_ONLY))
        run: |
          if ! grep -e '^CHANGELOG.md$' < files.txt > /dev/null; then
            echo "::error::CHANGELOG.md is not updated!"
            exit 1
          fi
      - name: Changelog check for CHANGELOG-PRERELEASE.md
        if: always() && !(fromJson(env.DOCUMENTATION) || fromJson(env.NO_CHANGELOG))
        run: |
          if ! grep -e '^CHANGELOG-PRERELEASE.md' < files.txt > /dev/null; then
            echo "::error::CHANGELOG-PRERELEASE.md is not updated!"
            exit 1
          fi
